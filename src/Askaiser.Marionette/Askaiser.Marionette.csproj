<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1;net6.0-windows</TargetFrameworks>
    <AssemblyTitle>Askaiser.Marionette</AssemblyTitle>
    <PackageId>Askaiser.Marionette</PackageId>
    <IsPackable>true</IsPackable>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Askaiser.Marionette.SourceGenerator\Askaiser.Marionette.SourceGenerator.csproj" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="OpenCvSharp4" Version="4.5.2.20210404" />
    <PackageReference Include="OpenCvSharp4.runtime.win" Version="4.5.2.20210404" />
    <PackageReference Include="System.Text.Json" Version="8.0.4" Condition=" '$(TargetFramework)' != 'net6.0' " />
    <PackageReference Include="Tesseract" Version="4.1.1" IncludeAssets="All" PrivateAssets="None" />
    <PackageReference Include="Tesseract.Drawing" Version="4.1.1" />
  </ItemGroup>

  <ItemGroup>
    <None Include="tessdata\eng.traineddata">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>content\tessdata;contentFiles\any\any\tessdata</PackagePath>
      <PackageCopyToOutput>true</PackageCopyToOutput>
      <Pack>true</Pack>
    </None>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Messages.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Messages.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Messages.Designer.cs">
      <DesignTime>true</DesignTime>
      <AutoGen>true</AutoGen>
      <DependentUpon>Messages.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\README.md" Link="README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="build\Askaiser.Marionette.targets" Pack="true" PackagePath="build\net45\" />
    <Content Include="buildTransitive\Askaiser.Marionette.targets" Pack="true" PackagePath="buildTransitive\net45\" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Insert custom target to pack our source generator into generated package (https://stackoverflow.com/q/40396161/825695) -->
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <MarionettePrivateAssetsFiles Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
      <MarionetteSourceGeneratorDlls Include="@(MarionettePrivateAssetsFiles)" Condition=" '%(Filename)' == 'Askaiser.Marionette.SourceGenerator' And '%(Extension)' == '.dll' " />
    </ItemGroup>

    <!-- Prevent copying the source generator files multiple times (for each targeted framework) -->
    <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
      <TfmSpecificPackageFile Include="@(MarionetteSourceGeneratorDlls)" PackagePath="analyzers\dotnet\cs" />
    </ItemGroup>
  </Target>
</Project>
